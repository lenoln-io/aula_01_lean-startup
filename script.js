let currentProgress = 0;

function updateProgress() {
	currentProgress += 10;
	if (currentProgress > 100) currentProgress = 100;
	document.getElementById("progressBar").style.width = `${currentProgress}%`;
}

function _showDetails(type) {
	const messages = {
		efficiency:
			"üí° A efici√™ncia na Lean Startup significa fazer mais com menos, testando ideias rapidamente sem gastar recursos desnecess√°rios.",
		learning:
			"üìö O aprendizado cont√≠nuo √© fundamental: cada teste, cada feedback, cada m√©trica nos ensina algo novo sobre nossos clientes e produto.",
		risk: "üõ°Ô∏è Reduzir riscos significa validar hip√≥teses antes de investir tempo e dinheiro significativos no desenvolvimento.",
	};

	alert(messages[type]);
	updateProgress();
}

function _explainStep(step) {
	const explanations = {
		build:
			"üî® BUILD (Construir): Desenvolva um MVP (Produto M√≠nimo Vi√°vel) com as funcionalidades essenciais para testar sua hip√≥tese principal.",
		measure:
			"üìä MEASURE (Medir): Colete dados reais sobre como os usu√°rios interagem com seu MVP. Use m√©tricas quantitativas e qualitativas.",
		learn:
			"üß† LEARN (Aprender): Analise os dados coletados e decida: continuar, ajustar ou pivotar. O aprendizado guia a pr√≥xima itera√ß√£o do ciclo.",
	};

	document.getElementById("stepExplanation").innerHTML = `
                <div style="font-size: 1.1em; color: #15803d; font-weight: bold;">
                    ${explanations[step]}
                </div>
            `;
}

function _explainConcept(concept) {
	const explanations = {
		efficiency:
			"üí° A efici√™ncia na Lean Startup significa fazer mais com menos, testando ideias rapidamente sem gastar recursos desnecess√°rios.",
		learning:
			"üìö O aprendizado cont√≠nuo √© fundamental: cada teste, cada feedback, cada m√©trica nos ensina algo novo sobre nossos clientes e produto.",
		risk: "üõ°Ô∏è Reduzir riscos significa validar hip√≥teses antes de investir tempo e dinheiro significativos no desenvolvimento.",
	};

	document.getElementById("conceptExplanation").innerHTML = `
                <div style="font-size: 1.1em; color: #15803d; font-weight: bold;">
                    ${explanations[concept]}
                </div>
            `;
}

function _checkAnswer(element, isCorrect) {
	// Remove classes anteriores de todas as op√ß√µes na mesma quest√£o
	const options = element.parentElement.children;
	for (const option of options) {
		option.classList.remove("correct", "incorrect");
	}

	// Adiciona a classe apropriada
	if (isCorrect) {
		element.classList.add("correct");
		element.innerHTML += " ‚úÖ";
	} else {
		element.classList.add("incorrect");
		element.innerHTML += " ‚ùå";

		// Mostra a resposta correta
		for (const option of options) {
			if (option.onclick.toString().includes("true")) {
				option.classList.add("correct");
				option.innerHTML += " ‚úÖ (Resposta correta)";
				break;
			}
		}
	}
	updateProgress();
}

function _resetQuiz() {
	const options = document.querySelectorAll(".quiz-option");
	options.forEach((option) => {
		option.classList.remove("correct", "incorrect");
		option.innerHTML = option.innerHTML
			.replace(/ ‚úÖ.*$/, "")
			.replace(/ ‚ùå.*$/, "");
	});
}

function showProjectPhases() {
	const phases = `
            üìÖ CRONOGRAMA DO PROJETO TECHSOCIAL:
            
            üîç Semana 1-2: Identifica√ß√£o e Valida√ß√£o do Problema
            ‚Ä¢ Pesquisa de campo na comunidade
            ‚Ä¢ Entrevistas com poss√≠veis benefici√°rios
            ‚Ä¢ Defini√ß√£o do problema a ser resolvido
            
            üí° Semana 3-4: Idea√ß√£o e Prototipagem
            ‚Ä¢ Brainstorming de solu√ß√µes
            ‚Ä¢ Cria√ß√£o de wireframes e mockups
            ‚Ä¢ Valida√ß√£o da ideia com stakeholders
            
            üî® Semana 5-8: Desenvolvimento do MVP
            ‚Ä¢ Programa√ß√£o da solu√ß√£o m√≠nima vi√°vel
            ‚Ä¢ Testes internos e ajustes
            ‚Ä¢ Prepara√ß√£o para testes com usu√°rios
            
            üìä Semana 9-12: Testes e Itera√ß√µes
            ‚Ä¢ Testes com usu√°rios reais
            ‚Ä¢ Coleta de feedback e m√©tricas
            ‚Ä¢ Ajustes baseados no aprendizado
            
            üöÄ Semana 13-16: Refinamento e Escala
            ‚Ä¢ Melhorias no produto
            ‚Ä¢ Plano de sustentabilidade
            ‚Ä¢ Prepara√ß√£o da apresenta√ß√£o final
            
            üèÜ Semana 17-20: Apresenta√ß√£o e Implementa√ß√£o
            ‚Ä¢ Pitch para investidores sociais
            ‚Ä¢ Implementa√ß√£o piloto na comunidade
            ‚Ä¢ Avalia√ß√£o de impacto social
            `;

	alert(phases);
	updateProgress();
}

function startBrainstorming() {
	const tips = `
            üí° DICAS PARA O BRAINSTORMING:
            
            1. üö´ Sem julgamentos: Todas as ideias s√£o v√°lidas inicialmente
            2. üåä Quantidade primeiro: Gerem muitas ideias antes de filtrar
            3. üîÑ Construam sobre ideias dos outros
            4. üéØ Mantenham o foco em problemas sociais reais
            5. üìù Documentem tudo: at√© as ideias "malucas" podem ser √∫teis
            
            üéØ PERGUNTAS ORIENTADORAS:
            ‚Ä¢ Que problemas voc√™s veem no dia a dia da comunidade?
            ‚Ä¢ Que dificuldades seus familiares e vizinhos enfrentam?
            ‚Ä¢ Que servi√ßos p√∫blicos poderiam funcionar melhor?
            ‚Ä¢ Que grupos vulner√°veis precisam de mais apoio?
            ‚Ä¢ Como a tecnologia poderia ajudar nesses casos?
            
            ‚è∞ Tempo: 20 minutos de brainstorming intenso!
            `;

	alert(tips);
	updateProgress();
}

function showResources() {
	const resources = `
            üìö RECURSOS ADICIONAIS:
            
            üìñ Livros:
            ‚Ä¢ "A Startup Enxuta" - Eric Ries
            ‚Ä¢ "Inova√ß√£o Social" - Andr√© Lara Resende
            
            üé¨ V√≠deos:
            ‚Ä¢ "The Lean Startup Methodology" (TED Talk)
            ‚Ä¢ Cases de startups sociais brasileiras
            
            üåê Sites:
            ‚Ä¢ Artemisia (artemisia.org.br)
            ‚Ä¢ Gerando Falc√µes (gerandofalcoes.com)
            ‚Ä¢ Ashoka Brasil (ashoka.org.br)
            
            üõ†Ô∏è Ferramentas:
            ‚Ä¢ Canvas de Modelo de Neg√≥cios
            ‚Ä¢ Trello para gest√£o de projetos
            ‚Ä¢ Google Forms para pesquisas
            ‚Ä¢ Figma para prototipagem
            `;

	alert(resources);
}

function _goToActivities() {
	window.location.href = "./activities/";
}

function _scrollToTop() {
	window.scrollTo({
		top: 0,
		behavior: "smooth",
	});
}

// Adiciona interatividade aos slides
document.addEventListener("DOMContentLoaded", () => {
	const slides = document.querySelectorAll(".slide");

	// Observer para animar slides quando entram na tela
	const observer = new IntersectionObserver(
		(entries) => {
			entries.forEach((entry) => {
				if (entry.isIntersecting) {
					entry.target.style.opacity = "1";
					entry.target.style.transform = "translateY(0)";
					updateProgress();
				}
			});
		},
		{
			threshold: 0.1,
		},
	);

	slides.forEach((slide) => {
		slide.style.opacity = "0";
		slide.style.transform = "translateY(30px)";
		slide.style.transition = "all 0.6s ease";
		observer.observe(slide);
	});

	// Adiciona efeito de typing animation no t√≠tulo
	const title = document.querySelector("h1");
	if (title) {
		const text = title.textContent;
		title.textContent = "";
		let i = 0;

		function typeWriter() {
			if (i < text.length) {
				title.textContent += text.charAt(i);
				i++;
				setTimeout(typeWriter, 100);
			}
		}

		setTimeout(typeWriter, 500);
	}
});

// Adiciona tooltips interativos
document.querySelectorAll(".concept-card").forEach((card) => {
	card.addEventListener("mouseenter", function () {
		this.style.transform = "translateY(-8px) scale(1.02)";
	});

	card.addEventListener("mouseleave", function () {
		this.style.transform = "translateY(0) scale(1)";
	});
});

// Sistema de gamifica√ß√£o simples
const score = 0;
const achievements = [];

function addAchievement(name, description) {
	if (!achievements.includes(name)) {
		achievements.push(name);
		showAchievement(name, description);
	}
}

function showAchievement(name, description) {
	const achievement = document.createElement("div");
	achievement.innerHTML = `
                <div style="
                    position: fixed;
                    top: 20px;
                    right: 20px;
                    background: linear-gradient(135deg, #fbbf24, #f59e0b);
                    color: white;
                    padding: 15px 20px;
                    border-radius: 10px;
                    box-shadow: 0 8px 25px rgba(245, 158, 11, 0.3);
                    z-index: 1001;
                    animation: slideInRight 0.5s ease;
                ">
                    <div style="font-weight: bold; font-size: 1.1em;">üèÜ ${name}</div>
                    <div style="font-size: 0.9em; opacity: 0.9;">${description}</div>
                </div>
            `;

	document.body.appendChild(achievement);

	setTimeout(() => {
		achievement.remove();
	}, 3000);
}

// Adiciona CSS para anima√ß√µes
const style = document.createElement("style");
style.textContent = `
            @keyframes slideInRight {
                from {
                    transform: translateX(100%);
                    opacity: 0;
                }
                to {
                    transform: translateX(0);
                    opacity: 1;
                }
            }
            
            @keyframes bounce {
                0%, 20%, 53%, 80%, 100% {
                    transform: translate3d(0,0,0);
                }
                40%, 43% {
                    transform: translate3d(0, -30px, 0);
                }
                70% {
                    transform: translate3d(0, -15px, 0);
                }
                90% {
                    transform: translate3d(0, -4px, 0);
                }
            }
        `;
document.head.appendChild(style);

// Monitora intera√ß√µes para dar achievements
let interactionCount = 0;
document.addEventListener("click", (e) => {
	if (
		e.target.classList.contains("interactive-element") ||
		e.target.classList.contains("btn") ||
		e.target.classList.contains("quiz-option")
	) {
		interactionCount++;

		if (interactionCount === 3) {
			addAchievement(
				"Explorador",
				"Voc√™ est√° explorando ativamente o conte√∫do!",
			);
		}

		if (interactionCount === 7) {
			addAchievement("Curioso", "Sua curiosidade √© inspiradora!");
		}

		if (interactionCount === 15) {
			addAchievement(
				"Expert em Lean",
				"Voc√™ dominou os conceitos fundamentais!",
			);
		}
	}
});
